@use "../vars.scss" as *;

input,
textarea,
select {
  border: var(--border-width) solid get-border-color();
  border-radius: var(--border-radius);
  padding: calc(var(--padding) / 2);
  background-color: cur-color(var(--surface-lc-1));
  color: cur-color(var(--text-lc-1));

  &[aria-invalid="true"] {
    --color: var(--error-color);
  }
}

textarea {
  display: block;
  resize: vertical;
}

input:not([type="checkbox"], [type="radio"]),
select,
textarea {
  margin-bottom: 1rem;
}
input:not([type="checkbox"], [type="radio"], [type="range"], [type="file"]),
select,
textarea {
  appearance: none;
  padding: 0.75rem 1rem;
}

input:not([type="checkbox"], [type="radio"], [type="range"]) {
  height: calc(1rem * 1.5 + 0.75rem * 2 + var(--border-width) * 2);
}

input:not([type="checkbox"], [type="radio"]),
select,
textarea {
  width: 100%;
}

input,
select,
textarea {
  border: var(--border-width) solid get-border-color();
  border-radius: var(--border-radius);
  background-color: cur-color(var(--surface-lc-1));
  color: cur-color(var(--text-lc-1));
  outline: 0;

  &::placeholder {
    color: color-mix(in oklch, cur-color(var(--text-lc-2)), transparent 50%);
  }
}

input[type="file"] {
  color: cur-color(var(--text-lc-3));
  background-color: transparent;
  display: flex;
  flex-direction: row;
  justify-content: center;
  height: auto;
}

input::file-selector-button {
  border-radius: var(--border-radius);
  border: var(--border-width) solid cur-color(var(--surface-lc-3));
  top: 0;
  bottom: 0;
  padding: 0.75rem 1rem;
  margin-right: 1rem;

  background-color: cur-color(var(--surface-lc-2));
  color: cur-color(var(--text-lc-3));
  cursor: pointer;
}

label > :where(input, select, textarea) {
  margin-top: calc(1rem * 0.25);
}

select:not([multiple], [size]),
input:is([type="date"], [type="datetime-local"], [type="month"], [type="time"], [type="week"]) {
  padding-inline-start: 1rem;
  padding-inline-end: 2.5rem;
  background-image: var(--icon-calendar);
  background-position: center right 1.25rem;
  background-size: 1rem auto;
  background-repeat: no-repeat;

  &:after {
    content: " ";
    mask-image: var(--icon-calendar);
    background-image: red;
  }
}

select:not([multiple], [size]) {
  background-image: var(--icon-chevron);
}

input:not([type="checkbox"], [type="radio"], [type="range"], [type="file"])[type="time"] {
  mask-image: var(--pico-icon-time);
}

[type="date"]::-webkit-calendar-picker-indicator,
[type="datetime-local"]::-webkit-calendar-picker-indicator,
[type="month"]::-webkit-calendar-picker-indicator,
[type="time"]::-webkit-calendar-picker-indicator,
[type="week"]::-webkit-calendar-picker-indicator {
  width: 1rem;
  margin-right: calc(1.25rem * -1);
  margin-left: 1.25rem;
  cursor: pointer;
  opacity: 0;
}

@-moz-document url-prefix() {
  [type="date"],
  [type="datetime-local"],
  [type="month"],
  [type="time"],
  [type="week"] {
    padding-right: var(--pico-form-element-spacing-horizontal) !important;
    background-image: none !important;
  }
}
[dir="rtl"] :is([type="date"], [type="datetime-local"], [type="month"], [type="time"], [type="week"]) {
  text-align: right;
}
label:has(> input[type="radio"]) {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;

  input[type="radio"] {
    appearance: none;
    width: 1rem;
    height: 1rem;
    border: var(--border-width) solid get-border-color();
    border-radius: 50%;
    position: relative;
    box-sizing: border-box;
    display: inline-block;
    margin: 0;
  }

  input[type="radio"]::after {
    content: "";
    position: absolute;
    width: 1rem;
    height: 1rem;
    top: 0;
    left: 0;
    border: var(--border-width) solid cur-color(var(--surface-lc-1));
    box-sizing: border-box;
    background: get-border-color();
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.2s;
  }

  input[type="radio"]:checked::after {
    opacity: 1;
  }
}

label:has(> input[type="checkbox"]) {
  display: flex;
  align-items: center;
  cursor: pointer;
  gap: 0.5em;
  /* padding: 0.5em; */
  /* border: 2px solid #ccc; */
  /* border-radius: 0.5em; */
  transition:
    border-color 0.2s,
    background 0.2s;
}

label:has(> input[type="checkbox"]:checked) {
  /* border-color: #333; */
  /* background: #f0f0f0; */
}

input[type="checkbox"] {
  margin: 0;
  appearance: none;
  width: 1.5rem;
  height: 1.5rem;
  border: var(--border-width) solid get-border-color();
  border-radius: calc(var(--border-radius) / 2);
  display: inline-block;
  position: relative;
}

input[type="checkbox"]::after {
  content: "";
  position: absolute;
  top: 0.55rem;
  left: 0.7rem;
  width: 0.4rem;
  height: 0.8rem;
  border: solid cur-color(var(--surface-lc-1));
  border-width: 0 var(--border-width) var(--border-width) 0;
  transform: translate(-50%, -50%) rotate(45deg);
  opacity: 0;
  transition: opacity 0.2s;
}

input[type="checkbox"]:checked {
  background-color: cur-color(var(--surface-lc-4));
  &::after {
    opacity: 1;
  }
}

label.block:has(> input[type="radio"]) {
  padding: 2rem;
  border: var(--border-width) solid cur-color(var(--surface-lc-2));
  border-radius: var(--border-radius);

  &:has(input:checked) {
    border-color: get-border-color();
    background-color: cur-color(var(--surface-lc-2));
  }

  /* &:has(input[aria-invalid="true"]) { */
  /* --color: var(--error-color); */
  /* background-color: cur-color(var(--surface-lc-3)); */
  /* } */
}

input[type="radio"],
input[type="checkbox"] {
  cursor: pointer;
}

input[type="color"] {
  appearance: none;
  -webkit-appearance: none;
  padding: 0;
  background: none;
  border: none;
  padding: 0.25rem;
  box-sizing: border-box;
  cursor: pointer;
  border: var(--border-width) solid get-border-color();
  // background-color: cur-color(var(--swatch-lc-2));
}

input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
}

input[type="color"]::-webkit-color-swatch {
  border-radius: var(--border-radius);
  border: 0;
}

input[type="color"]::-moz-color-swatch {
  border-radius: var(--border-radius);
  border: 0;
}

// input:not([type="checkbox"], [type="radio"], [type="range"], [type="file"]):is(
//     [type="date"],
//     [type="datetime-local"],
//     [type="month"],
//     [type="time"],
//     [type="week"]
//   ) {
//   padding-right: calc(var(--icon-width) + var(--icon-position));
//   background-image: var(--icon-calendar);
//   background-position: center left var(--icon-position);
//   background-size: var(--icon-width) auto;
//   background-repeat: no-repeat;
// }
